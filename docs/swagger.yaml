openapi: 3.0.0
info:
  title: Modern Finance API
  description: API para gerenciamento de usuários, contas e transferências
  version: 1.0.0

servers:
  - url: http://localhost:3000
    description: Servidor Local
  - url: https://modern-finance-server-s8ua.onrender.com
    description: Servidor Render (Produção)

paths:
  ### USERS ###
  /users/register:
    post:
      summary: Registrar novo usuário + conta
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "201":
          description: Usuário e conta criados com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
                  account:
                    $ref: "#/components/schemas/Account"
        "400":
          description: Erro de validação
        "500":
          description: Erro interno

  /users/login:
    post:
      summary: Login de usuário
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - cpf
                - password
              properties:
                cpf:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Login bem-sucedido
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
        "401":
          description: Credenciais inválidas
        "500":
          description: Erro interno

  /users/me:
    get:
      summary: Obter usuário autenticado
      tags: [Users]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Usuário atual
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
        "401":
          description: Token inválido ou expirado
        "500":
          description: Erro interno

  /users/logout:
    post:
      summary: Logout do usuário
      tags: [Users]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Logout realizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Token não encontrado
        "500":
          description: Erro interno

  ### ACCOUNTS ###
  /accounts/{userId}:
    get:
      summary: Buscar conta pelo userId
      tags: [Accounts]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Conta encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "404":
          description: Conta não encontrada

  /accounts/{accountId}/balance:
    get:
      summary: Buscar saldo da conta
      tags: [Accounts]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Saldo da conta
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: number
                    format: float

  /accounts/set_transfer_password:
    post:
      summary: Definir senha de transferência
      tags: [Accounts]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountNumber:
                  type: string
                transferPassword:
                  type: string
      responses:
        "200":
          description: Senha definida com sucesso

  /accounts/change_transfer_password:
    post:
      summary: Alterar senha de transferência
      tags: [Accounts]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountNumber:
                  type: string
                old_transferPassword:
                  type: string
                new_transferPassword:
                  type: string
      responses:
        "200":
          description: Senha alterada com sucesso

  /accounts/verify_transfer_password:
    post:
      summary: Verificar senha de transferência
      tags: [Accounts]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountNumber:
                  type: string
      responses:
        "200":
          description: Resultado da verificação

  /accounts/transfer:
    post:
      summary: Transferência entre contas
      tags: [Accounts]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fromAccountNumber:
                  type: string
                toAccountNumber:
                  type: string
                transferPassword:
                  type: string
                amount:
                  type: number
                  format: float
      responses:
        "200":
          description: Transferência realizada com sucesso

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        cpf:
          type: string
        phone:
          type: string
        email:
          type: string

    Account:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        accountNumber:
          type: string
        balance:
          type: number
          format: float

    RegisterRequest:
      type: object
      required:
        - name
        - cpf
        - phone
        - email
        - password
      properties:
        name:
          type: string
        cpf:
          type: string
        phone:
          type: string
        email:
          type: string
        password:
          type: string

security:
  - bearerAuth: []
